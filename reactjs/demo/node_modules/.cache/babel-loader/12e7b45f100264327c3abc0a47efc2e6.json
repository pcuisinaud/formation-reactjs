{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pcuisinaud\\\\Desktop\\\\Formation ReactJS\\\\reactjs\\\\demo\\\\src\\\\PlayerForm.js\";\nimport React from 'react';\nimport PlayerService from './services/Player.service';\nimport LangContext from './LangContext';\n\nclass PlayerForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      team: '',\n      teams: null\n    };\n    this.numInput = React.createRef();\n  } // postconstruct\n\n\n  componentDidMount() {\n    console.log(\"Did mount\");\n    PlayerService.getTeams().then(teams => this.setState({\n      teams\n    }));\n    console.log(this.context);\n  } // predestroy\n\n\n  componentWillUnmount() {}\n\n  onSave() {\n    this.props.onSave(this.state);\n    this.setState({\n      name: '',\n      team: ''\n    });\n    console.log(this.numInput.current.value = 'TODO');\n  }\n\n  onHandleChange(e) {\n    let state = {};\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  }\n\n  render() {\n    if (!this.state.teams) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }\n    }, \"Loading...\");\n    this.onHandleChange = this.onHandleChange.bind(this);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Player Form\"), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.myDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"myDiv\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.numInput,\n      placeholder: \"Age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      placeholder: \"Nom du joueur\",\n      value: this.state.name,\n      onChange: this.onHandleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"team\",\n      value: this.state.team,\n      onChange: this.onHandleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"- Choisir une \\xE9quipe -\"), this.state.teams.map(team => /*#__PURE__*/React.createElement(\"option\", {\n      key: team,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 54\n      }\n    }, team))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onSave(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Enregistrer\"), this.context.lang);\n  }\n\n}\n\nPlayerForm.contextType = LangContext;\nexport default PlayerForm;","map":{"version":3,"sources":["C:/Users/pcuisinaud/Desktop/Formation ReactJS/reactjs/demo/src/PlayerForm.js"],"names":["React","PlayerService","LangContext","PlayerForm","Component","constructor","props","state","name","team","teams","numInput","createRef","componentDidMount","console","log","getTeams","then","setState","context","componentWillUnmount","onSave","current","value","onHandleChange","e","target","render","bind","myDiv","map","lang","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PlayerService from './services/Player.service';\r\nimport LangContext from './LangContext';\r\n\r\nclass PlayerForm extends React.Component {\r\n\r\n    static contextType = LangContext\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { name: '', team: '', teams: null }\r\n        this.numInput = React.createRef();\r\n    }\r\n\r\n    // postconstruct\r\n    componentDidMount() {\r\n        console.log(\"Did mount\")\r\n        PlayerService.getTeams().then(teams => this.setState({teams}));\r\n        console.log(this.context);\r\n    }\r\n  \r\n    // predestroy\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    onSave() {\r\n        this.props.onSave(this.state);\r\n        this.setState({ name: '', team: '' });\r\n        console.log(this.numInput.current.value='TODO')\r\n    }\r\n\r\n    onHandleChange(e) {\r\n        let state = {};\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.teams) return (<div>Loading...</div>)\r\n\r\n        this.onHandleChange = this.onHandleChange.bind(this);\r\n\r\n        return (\r\n            <div>\r\n                <h2>Player Form</h2>         \r\n                <div ref={this.myDiv}>myDiv</div>       \r\n                <input type='text' ref={this.numInput} placeholder='Age'/>\r\n                <input name=\"name\" placeholder='Nom du joueur' value={this.state.name} onChange={this.onHandleChange} />\r\n                <select name=\"team\" value={this.state.team} onChange={this.onHandleChange}>\r\n                    <option value=\"\">- Choisir une Ã©quipe -</option>\r\n                    {this.state.teams.map((team) => (<option key={team}>{team}</option>))}\r\n                </select>\r\n                <button onClick={() => this.onSave()}>Enregistrer</button>\r\n                {this.context.lang}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayerForm;"]},"metadata":{},"sourceType":"module"}